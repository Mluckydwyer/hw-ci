name: Build Images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-slim:
    name: "Build slim container"
    runs-on: ubuntu-latest
    steps:
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUBCR_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile-Slim
        push: true
        tags: mluckydwyer/hw-ci:slim,ghcr.io/mluckydwyer/hw-ci:slim
        cache-from: type=registry,ref=mluckydwyer/hw-ci:buildcache
        cache-to: type=registry,ref=mluckydwyer/hw-ci:buildcache,mode=max
  build-full:
    name: "Build full container"
    runs-on: ubuntu-latest
    needs: build-slim
    steps:
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUBCR_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile-Full
        push: true
        tags: mluckydwyer/hw-ci:full,ghcr.io/mluckydwyer/hw-ci:full
        cache-from: type=registry,ref=mluckydwyer/hw-ci:buildcache
        cache-to: type=registry,ref=mluckydwyer/hw-ci:buildcache,mode=max
  build-dev:
    name: "Build dev container"
    runs-on: ubuntu-latest
    needs: build-full
    steps:
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUBCR_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile-Dev
        push: true
        tags: mluckydwyer/hw-ci:dev,ghcr.io/mluckydwyer/hw-ci:dev
        cache-from: type=registry,ref=mluckydwyer/hw-ci:buildcache
        cache-to: type=registry,ref=mluckydwyer/hw-ci:buildcache,mode=max
  build-ubuntu:
    name: "Build ununtu container"
    runs-on: ubuntu-latest
    steps:
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUBCR_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile-Ubuntu
        push: true
        tags: mluckydwyer/hw-ci:ubuntu,ghcr.io/mluckydwyer/hw-ci:ubuntu
        cache-from: type=registry,ref=mluckydwyer/hw-ci:buildcache
        cache-to: type=registry,ref=mluckydwyer/hw-ci:buildcache,mode=max
