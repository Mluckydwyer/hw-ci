# mluckydwyer/hw-ci Docker Container
FROM mluckydwyer/hw-ci:full as full

LABEL \
    org.opencontainers.image.title="Hardware Verification CI Docker container" \
    org.opencontainers.image.description="Modelsim, Verilator, GHDL, VUnit, CocoTB, and Pytest for HW Development (+VNC)." \
    org.opencontainers.image.authors="Matthew Dwyer <dwyer@iastate.edu>" \
    org.opencontainers.image.source="https://github.com/Mluckydwyer/hw-ci"

ENV \
    container docker \
    # DISPLAY=host.docker.internal:0.0 \
    LIBGL_ALWAYS_INDRIECT=1


# VSCode Remote Env
FROM full as vscode
EXPOSE 8080
RUN curl -sSL https://code-server.dev/install.sh | sh \
    && mkdir -p ~/.config/code-server \
    && touch ~/.config/code-server/config.yaml \
    && sed -i.bak 's/auth: password/auth: none/' ~/.config/code-server/config.yaml

# Quality of Life Additions
FROM vscode as qol
RUN yum -y install bash wget htop sudo vim nano cmake openssl zsh teroshdl firefox dos2unix gtkwave \
    && pip3 install matplotlib remote_pdb debugpy teroshdl yowasp-yosys vsg
# RUN yum groupinstall "Development tools"

# Command Line ZSH tools
# RUN curl -sSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
# RUN git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
# RUN echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>! ~/.zshrc
# RUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
# RUN echo 'source ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting' >>! ~/.zshrc
# RUN sed -i 's/_THEME=\"robbyrussel\"/_THEME=\"linuxonly\"/g' ~/.zshrc
# RUN chsh -s /bin/zsh

# RUN echo "(/usr/bin/start-code-server.sh &> /tmp/code-server.log)" >> ~/.bashrc

# VNC Server for GUI applications
FROM qol as vnc
ENV WINDOW_MANAGER="openbox"
EXPOSE 5900 6080
RUN yum -y install xorg-x11-server-Xvfb x11vnc xterm openbox \
    && pip3 install numpy \
    && sed -ri "s/<number>4<\/number>/<number>1<\/number>/" /etc/xdg/openbox/rc.xml \
    && git clone --depth 1 https://github.com/novnc/noVNC.git /opt/novnc \
    && git clone --depth 1 https://github.com/novnc/websockify /opt/novnc/utils/websockify \
    && echo "export DISPLAY=:0" >> ~/.bashrc \
    && echo "[ ! -e /tmp/.X0-lock ] && (/usr/bin/start-vnc-session.sh &> /tmp/display-\${DISPLAY}.log)" >> ~/.bashrc
COPY resources/novnc-index.html /opt/novnc/index.html
COPY resources/start-vnc-session.sh /usr/bin/
RUN chmod +x /usr/bin/start-vnc-session.sh


FROM vnc as final
ENV PATH=/workspaces/tools:$PATH
WORKDIR /workspaces/
COPY ./resources /workspaces/tools
RUN chmod +x /workspaces/tools/*.sh \
    && chmod +rw /root/ -R
ENTRYPOINT /usr/bin/startup.sh
